// <auto-generated />
using System;
using ConsoleApp7;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConsoleApp7.Migrations
{
    [DbContext(typeof(BloggingContext))]
    [Migration("20200409200148_DoOrgTable2")]
    partial class DoOrgTable2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConsoleApp7.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Url");

                    b.HasKey("BlogId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("ConsoleApp7.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogId");

                    b.Property<string>("Content");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Title");

                    b.HasKey("PostId");

                    b.HasIndex("BlogId");

                    b.ToTable("Posts");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Post");
                });

            modelBuilder.Entity("ConsoleApp7.TestBigInt", b =>
                {
                    b.Property<long>("TestBigIntId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MyProperty")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TestBigIntId");

                    b.ToTable("TestBigInts");
                });

            modelBuilder.Entity("ConsoleApp7.TestBigIntOrg", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MyProperty")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TestBigIntsOrg");
                });

            modelBuilder.Entity("ConsoleApp7.DumbAsAPost", b =>
                {
                    b.HasBaseType("ConsoleApp7.Post");

                    b.Property<bool>("Stupid");

                    b.ToTable("DumbAsAPost");

                    b.HasDiscriminator().HasValue("dumb");
                });

            modelBuilder.Entity("ConsoleApp7.VideoPost", b =>
                {
                    b.HasBaseType("ConsoleApp7.Post");

                    b.Property<DateTime>("ReleaseDate");

                    b.Property<string>("VideoTitle");

                    b.ToTable("VideoPost");

                    b.HasDiscriminator().HasValue("video");
                });

            modelBuilder.Entity("ConsoleApp7.Post", b =>
                {
                    b.HasOne("ConsoleApp7.Blog", "Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
